
angular:-
npm install -g rxjs
npm install json-stringify




python:-
pip install pymongo
pip install jsonify
pip3 install Flask-jsonpify
pip install responses





MongoDB:- 
in bin folder 
mongod -- directoryperdb --dbpath [PATH] --logpath [PATH] --logappend --rest --install
	=> mongod --directoryperdb --dbpath "C:\Users\768998\Desktop\RT\Backend\data\db" --logpath "C:\Users\768998\Desktop\RT\Backend\data\logs\mongo.log" --logappend  --rest --install


---to start mongo shell go to bin and type mongo

show dbs' :  show dbs
create dbs's :  use [DBNAME]
current db : db
create user(controller of db) :
		db.createUser
		({
			user:"Uname",
			pwd:"123",
			roles:["readWrite","dbAdmin"]
		});
		=> db.createUser({ user:"Group1", pwd:"123", roles["readWrite", "dbAdmin"] });

			
see collections in the database :		show collections;

delete collections : 				b.<collection_name>.drop()


create Collection:				db.createCollection('CollectionName');

insertions: 					db.CollectionName.insert({name : "Vishal", age:"23"});
		=>db.User.insert({mobileNo:1234567890 , name:"Vishal" , password:"123" , age:'21' , address: "Chandigarh" , email:"vishal@gmail.com"});


multiple insertions : 				db.CollectionName.insert([{data1},{data2},{data3}]);
		=>db.User.insert([{mobileNo:0987456321 , name:"Rahul" , password:"123" , age:'21' , address: "Banglore" , email:"rahul@gmail.com"},{name:"naveen", mobileNo:6457894521 , password:"123" , age:"21" , address:"Hyderabad" , email:"naveen@gmail.com"}]);


see documents in colleciton: 			db.CollectionName.find();

see document with condition			db.CollectionName.find({name : "Vishal"});
									^shows all the document with name Vishal
									can put any condition

see docs with multiple conditions		db.CollectionName.find({$or:[{name:"Vishal"},{name:"abc"}]});

see docs with integer coditions			db.CollecitionName.find({age:{$gt:55}});													      ^ $gt: for greater than 
										$lt : for less than

search docs for  object 			db.CollectionName.find({"address.city":"Chandigarh"});
									^ if we have object stored 

search docs for array 				db.CollectionName.find({arrName:"valueToSearchFor"});



formatting output:				db.CollectionName.find().pretty();

update: db.CollectionName.update({ name:"Vishal"}, { name : "Vishal" , age:"23" , gender : "male"} ); 
				   ^ to find which 	^ new update on field, have to mention all the field 
				    one to update	   as it will replace the current data in the db


update without overwrite:
		
	db.CollectionName.update({ name:"Vishal"}, {$set :{gender:"male" } });
						    ^ will add gender field rather than override


increment int in db:

	db.CollectionName.update({name :"Vishal"}, {$inc:{age:3}});
						    ^ will increment age field with 3

remove a field(column):

	db.CollectionName.update({name:"Vishal"},{$unset:{age: 1} });

add column in update if not found:
	
	db.CollectionName.update({name:"Vishal"},{name : "Vishal" , age:"23" , gender : "male"} ,{upsert:true});

rename column name:
	
	db.CollectionName.update({name:"Vishal"},{ $rename:{"gender":"sex"} } );

delete rows/remove documents:

	db.CollectionName.remove({name:"Vishal"});

if want to delete only 1 document with the condition:

	db.CollectionName.remove({name:"Vishal"}, {justOne: true});


Sorting:

	db.CollectionName.find().sort({name:1});
				     ^  1 => Ascending
					-1 => Descending

Sorting with limit:
 	db.CollectionName.find().limit(4).sort({name:1});
				 ^ shows only 4 values
Counting:
	db.customers.find().count();


Counting with condition:

	db.CollectionName.find({name:"Vishal"}).count();
				
Iterate using forEach

	db.CollectionName.find().forEach(function(doc){print("Name"+ doc.name)});